syntax = "proto3";

package service.wireman;

import "google/api/annotations.proto";

option go_package = "github.com/contentfi/CantBeEvil_NFTCreator_Backend/server/api";

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc CreateCollection (Collection) returns (CreateCollectionReply)  {
      option (google.api.http) = {
          post: "/collection",
          body:"*"
      };
  }

  rpc ListCollection(ListCollectionRequest) returns (ListCollectionReply)  {
      option (google.api.http) = {
          get: "/collection",
      };
  }

  rpc GetCollection(GetCollectionRequest)returns (Collection)  {
      option (google.api.http) = {
          get: "/collection/{id}",
      };
  }

  rpc UserCollection(UserCollectionRequest)returns (UserCollectionReply)  {
      option (google.api.http) = {
          get: "/user/{owner_address}/collection",
      };
  }


   rpc DeleteCollection(DeleteCollectionRequest)returns (DeleteCollectionReply)  {
      option (google.api.http) = {
          delete: "/collection/{id}",
      };
  }
}

message DeleteCollectionRequest {
    int64 id = 1;
}

message DeleteCollectionReply {
}

message UserCollectionRequest {
  string owner_address = 1;
}

message GetCollectionRequest{
  int64 id = 1;
}

message ListCollectionRequest {
  int64 anchor_id = 1;
  int32 size = 2;
  bool reverse = 3;
}

message UserCollectionReply {
  repeated Collection collections = 1;
}

message ListCollectionReply {
  repeated Collection collections = 1;
  int64 anchor_id = 2;
  bool  is_end = 3;
}


// The request message containing the user's name.
message Collection {
  int64 id = 1;
  string name = 2;
  string logo = 3;
  string desc = 4;
  string license = 5;
  string address = 6;
  string creator_address = 7;
  int64 chain_id = 8;
  string symbol = 9;
  int64 mtime = 10;
}

// The response message containing the greetings
message CreateCollectionReply {
  bool success = 1;
  int64 id = 2;
}